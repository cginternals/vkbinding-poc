
#pragma once


#include <vkbinding/novk.h>

#include <vkbinding/vk/bitfield.h>


namespace vk11
{


// import bitfields to namespace
using vk::VK_BUFFER_CREATE_PROTECTED_BIT;
using vk::VK_COMMAND_POOL_CREATE_PROTECTED_BIT;
using vk::VK_DEPENDENCY_DEVICE_GROUP_BIT;
using vk::VK_DEPENDENCY_VIEW_LOCAL_BIT;
using vk::VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT;
using vk::VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT;
using vk::VK_FORMAT_FEATURE_DISJOINT_BIT;
using vk::VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT;
using vk::VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT;
using vk::VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT;
using vk::VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT;
using vk::VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT;
using vk::VK_FORMAT_FEATURE_TRANSFER_DST_BIT;
using vk::VK_FORMAT_FEATURE_TRANSFER_SRC_BIT;
using vk::VK_IMAGE_ASPECT_PLANE_0_BIT;
using vk::VK_IMAGE_ASPECT_PLANE_1_BIT;
using vk::VK_IMAGE_ASPECT_PLANE_2_BIT;
using vk::VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT;
using vk::VK_IMAGE_CREATE_ALIAS_BIT;
using vk::VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT;
using vk::VK_IMAGE_CREATE_DISJOINT_BIT;
using vk::VK_IMAGE_CREATE_EXTENDED_USAGE_BIT;
using vk::VK_IMAGE_CREATE_PROTECTED_BIT;
using vk::VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT;
using vk::VK_MEMORY_HEAP_MULTI_INSTANCE_BIT;
using vk::VK_MEMORY_PROPERTY_PROTECTED_BIT;
using vk::VK_PIPELINE_CREATE_DISPATCH_BASE;
using vk::VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT;
using vk::VK_QUEUE_PROTECTED_BIT;


} // namespace vk11